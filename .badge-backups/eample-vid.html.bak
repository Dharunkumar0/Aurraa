<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Polygons Basics</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>
<style>
  body {
    margin: 0;
    font-family: "Poppins", sans-serif;
    background: black;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    overflow: hidden;
  }
  .container {
    text-align: center;
    width: 95%;
    max-width: 1000px;
  }
  h1 {
    color: white;
    text-shadow: 0 0 10px #60a5fa;
    font-size: clamp(1.4rem, 2vw, 2.2rem);
    margin-bottom: 10px;
  }
  svg {
    width: 100%;
    height: 60vh;
  }
  .caption {
    margin-top: 8px;
    padding: 10px;
    border-radius: 10px;
    color: white;
    font-weight: bold;
    background: rgba(255,255,255,0.1);
    backdrop-filter: blur(6px);
    opacity: 0;
    transition: opacity 0.4s ease-in-out;
    min-height: 50px;
    font-size: 1.1rem;
  }
  .caption.show { opacity: 1; }
  select, button {
    margin-top: 8px;
    padding: 8px 12px;
    border-radius: 8px;
    border: none;
    font-weight: bold;
    cursor: pointer;
  }
  select { background: #1e293b; color: white; }
  button {
    background: linear-gradient(135deg, #f59e0b, #3b82f6);
    color: white;
    box-shadow: 0px 0px 10px #3b82f6;
  }
  .controls { display: flex; justify-content: center; gap: 10px; margin-top: 8px; }
</style>
</head>
<body>
<div class="container">
  <h1>ЁЯФ║ Polygons Basics</h1>
  <label for="langSelect" style="color:white;">ЁЯМР Language</label>
  <select id="langSelect">
    <option value="en">English</option>
    <option value="hi">рд╣рд┐рдиреНрджреА</option>
    <option value="ta">родрооро┐ро┤рпН</option>
    <option value="te">р░др▒Жр░▓р▒Бр░Чр▒Б</option>
    <option value="or">рмУрмбрм╝рм┐рмЖ</option>
  </select>

  <svg viewBox="0 0 1000 500">
    <defs>
      <radialGradient id="grad" cx="50%" cy="50%" r="50%">
        <stop offset="0%" stop-color="#f472b6"/>
        <stop offset="100%" stop-color="#3b82f6"/>
      </radialGradient>
    </defs>
    <g id="stars"></g>

    <!-- Polygons -->
    <polygon id="triangle" points="200,350 300,150 400,350" fill="none" stroke="#22d3ee" stroke-width="5" opacity="0"/>
    <polygon id="square" points="500,150 600,150 600,250 500,250" fill="none" stroke="#facc15" stroke-width="5" opacity="0"/>
    <polygon id="pentagon" points="750,200 800,150 850,200 825,250 775,250" fill="none" stroke="#f87171" stroke-width="5" opacity="0"/>
  </svg>

  <div id="caption" class="caption"></div>
  <div class="controls">
    <button id="playBtn">тЦ╢ Play</button>
    <button id="pauseBtn">тП╕ Pause</button>
  </div>
</div>

<script>
const captions = {
  en: [
    "Let's learn about polygons step by step.",
    "A Triangle has three sides and three angles.",
    "A Square is a quadrilateral with four equal sides and four right angles.",
    "A Pentagon has five sides and five angles."
  ],
  hi: [
    "рдЖрдЗрдП рдмрд╣реБрднреБрдЬреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдПрдХ-рдПрдХ рдХрд░рдХреЗ рдЬрд╛рдиреЗрдВред",
    "рддреНрд░рд┐рднреБрдЬ рдХреЗ рддреАрди рднреБрдЬрд╛рдПрдБ рдФрд░ рддреАрди рдХреЛрдг рд╣реЛрддреЗ рд╣реИрдВред",
    "рд╡рд░реНрдЧ рдПрдХ рдЪрддреБрд░реНрднреБрдЬ рд╣реИ рдЬрд┐рд╕рдХреА рдЪрд╛рд░реЛрдВ рднреБрдЬрд╛рдПрдБ рдмрд░рд╛рдмрд░ рдФрд░ рдЪрд╛рд░реЛрдВ рдХреЛрдг рд╕рдордХреЛрдг рд╣реЛрддреЗ рд╣реИрдВред",
    "рдкрдВрдЪрднреБрдЬ рдХреЗ рдкрд╛рдВрдЪ рднреБрдЬрд╛рдПрдБ рдФрд░ рдкрд╛рдВрдЪ рдХреЛрдг рд╣реЛрддреЗ рд╣реИрдВред"
  ],
  ta: [
    "рокро▓роХрпЛрогроЩрпНроХро│рпИ роТройрпНро▒ройрпН рокро┐ройрпН роТройрпНро▒ро╛роХ роХро▒рпНрокрпЛроорпН.",
    "роорпБроХрпНроХрпЛрогродрпНродро┐ро▒рпНроХрпБ роорпВройрпНро▒рпБ рокроХрпНроХроЩрпНроХро│рпБроорпН роорпВройрпНро▒рпБ роХрпЛрогроЩрпНроХро│рпБроорпН роЙро│рпНро│рой.",
    "роЪродрпБро░роорпН роОройрпНрокродрпБ роиро╛ройрпНроХрпБ роЪроо рокроХрпНроХроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роиро╛ройрпНроХрпБ роирпЗро░рпНроХрпЛрогроЩрпНроХро│рпН роХрпКрогрпНроЯ роиро╛ро▒рпНроХрпЛрогроорпН.",
    "роРроирпНродрпБ рокроХрпНроХроЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН роРроирпНродрпБ роХрпЛрогроЩрпНроХро│рпН роХрпКрогрпНроЯ роРроирпНродрпБрокроХрпНроХ роХрпЛрогроорпН."
  ],
  te: [
    "р░мр░╣р▒Бр░нр▒Бр░Ьр░╛р░▓р░ир▒Б р░Тр░Хр▒Нр░Хр▒Кр░Хр▒Нр░Хр░Яр░┐р░Чр░╛ р░ир▒Зр░░р▒Нр░Ър▒Бр░Хр▒Бр░Вр░жр░╛р░В.",
    "р░др▒Нр░░р░┐р░нр▒Бр░Ьр░╛р░ир░┐р░Хр░┐ р░ор▒Вр░бр▒Б р░нр▒Бр░Ьр░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░ор▒Вр░бр▒Б р░Хр▒Лр░гр░╛р░▓р▒Б р░Йр░Вр░Яр░╛р░пр░┐.",
    "р░Ър░др▒Бр░░р░╕р▒Нр░░р░В р░Ер░ир▒Зр░жр░┐ р░ир░╛р░▓р▒Бр░Чр▒Б р░╕р░ор░╛р░и р░нр▒Бр░Ьр░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░ир░╛р░▓р▒Бр░Чр▒Б р░╕р░ор░Хр▒Лр░гр░╛р░▓р▒Б р░Хр░▓р░┐р░Чр░┐р░и р░Ър░др▒Бр░░р▒Нр░нр▒Бр░Ьр░В.",
    "р░Рр░жр▒Б р░нр▒Бр░Ьр░╛р░▓р▒Б р░ор░░р░┐р░пр▒Б р░Рр░жр▒Б р░Хр▒Лр░гр░╛р░▓р▒Б р░Хр░▓р░┐р░Чр░┐р░и р░Рр░жр▒Б р░кр░Хр▒Нр░Хр░▓ р░мр░╣р▒Бр░нр▒Бр░Ьр░В."
  ],
  or: [
    "рммрм╣рнБрмнрнБрмЬ рммрм┐рм╖рнЯрм░рнЗ рмПрмХрнЗрмХрм░рнЗ рм╕рм┐рмЦрм┐рммрм╛ред",
    "рмдрнНрм░рм┐рмнрнБрмЬрм░ рмдрм┐рмирнЛрмЯрм┐ рмкрм╛рмЯрм┐ рмУ рмдрм┐рмирнЛрмЯрм┐ рмХрнЛрмг рмерм╛рмПред",
    "рммрм░рнНрмЧ рмПрмХ рмЪрмдрнБрм░рнНрмнрнБрмЬ рмпрм╛рм╣рм╛рм░ рмЪрм╛рм░рм┐рмЯрм┐ рмкрм╛рмЯрм┐ рм╕рморм╛рми рмУ рмЪрм╛рм░рм┐рмЯрм┐ рмХрнЛрмг рм╕рмормХрнЛрмгред",
    "рмкрнЗрмгрнНрмЯрм╛рмЧрмирм░ рмкрм╛рмЮрнНрмЪрмЯрм┐ рмкрм╛рмЯрм┐ рмУ рмкрм╛рмЮрнНрмЪрмЯрм┐ рмХрнЛрмг рмерм╛рмПред"
  ]
};

const langMap = {en:'en-US', hi:'hi-IN', ta:'ta-IN', te:'te-IN', or:'or-IN'};
const captionEl = document.getElementById("caption");
const playBtn = document.getElementById("playBtn");
const pauseBtn = document.getElementById("pauseBtn");
const langSelect = document.getElementById("langSelect");
let timeline, paused = false;

// Star background
const starGroup = document.getElementById("stars");
for (let i = 0; i < 100; i++) {
  const star = document.createElementNS("http://www.w3.org/2000/svg", "circle");
  star.setAttribute("cx", Math.random() * 1000);
  star.setAttribute("cy", Math.random() * 500);
  star.setAttribute("r", Math.random() * 2);
  star.setAttribute("fill", "white");
  starGroup.appendChild(star);
}

function speak(text, lang) {
  const utter = new SpeechSynthesisUtterance(text);
  utter.lang = lang;
  window.speechSynthesis.cancel();
  window.speechSynthesis.speak(utter);
}

function showCaption(text) {
  captionEl.textContent = text;
  captionEl.classList.add("show");
}

function playAnimation() {
  if (timeline) timeline.kill();
  captionEl.textContent = "";
  captionEl.classList.remove("show");
  gsap.set(["#triangle","#square","#pentagon"], {opacity:0, scale:0});

  let currentLang = langSelect.value;
  let steps = captions[currentLang];

  timeline = gsap.timeline({paused:false});
  timeline.add(()=>{showCaption(steps[0]); speak(steps[0], langMap[currentLang]);}, "+=0.5");
  timeline.to("#triangle",{opacity:1, scale:1, duration:1, onStart:()=>{showCaption(steps[1]); speak(steps[1], langMap[currentLang]);}}, "+=3");
  timeline.to("#square",{opacity:1, scale:1, duration:1, onStart:()=>{showCaption(steps[2]); speak(steps[2], langMap[currentLang]);}}, "+=5");
  timeline.to("#pentagon",{opacity:1, scale:1, duration:1, onStart:()=>{showCaption(steps[3]); speak(steps[3], langMap[currentLang]);}}, "+=5");
}

pauseBtn.addEventListener("click",()=>{
  paused = !paused;
  pauseBtn.textContent = paused ? "тЦ╢ Resume" : "тП╕ Pause";
  if (paused) { timeline.pause(); window.speechSynthesis.cancel(); }
  else { timeline.resume(); }
});

playBtn.addEventListener("click", playAnimation);
langSelect.addEventListener("change", playAnimation);
</script>
</body>
</html>