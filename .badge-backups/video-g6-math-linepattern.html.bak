<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Number Line Representation</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>
  <style>
    body {
      margin: 0;
      font-family: "Poppins", sans-serif;
      background: linear-gradient(135deg, #74ebd5, #ACB6E5);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .card {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 16px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
      width: 75%;
      max-width: 800px;
      padding: 20px;
      text-align: center;
    }
    svg { width: 100%; height: auto; margin-top: 20px; }
    .caption {
      font-size: 1rem;
      margin-top: 12px;
      background: rgba(0,0,0,0.05);
      padding: 8px 16px;
      border-radius: 10px;
      display: inline-block;
      color: #222;
    }
    button, select {
      margin: 8px;
      padding: 10px 16px;
      border: none;
      border-radius: 10px;
      font-size: 0.9rem;
      font-weight: bold;
      cursor: pointer;
    }
    #replayBtn { background: #ff7b54; color: #fff; display: none; }
    #pauseBtn { background: #4CAF50; color: #fff; }
    #replayBtn:hover { background: #ff5722; }
    #pauseBtn:hover { background: #2e7d32; }
    select { border: 1px solid #ccc; font-weight: normal; padding: 6px 12px; }
    .numText { font-weight: bold; font-size: 16px; fill: #111; }
    .point { fill: #FF6B6B; opacity: 0; }
    line { stroke: #222; stroke-width: 2; }
    .nav-btn, .finish-btn {
      background: linear-gradient(90deg,#ff7b54,#ff5a9e);
      color: #fff;
      padding: 10px 16px;
      border-radius: 12px;
      border: none;
      box-shadow: 0 8px 20px rgba(0,0,0,0.12);
      font-weight: 700;
      cursor: pointer;
    }
    .finish-btn { position: fixed; right: 18px; bottom: 18px; z-index: 1200; }
  </style>
</head>
<body>
  <div class="card">
    <h2>Number Line Representation</h2>
    <h3>Visualizing Numbers on a Line</h3>

    <label for="langSelect">üåê Choose Language: </label>
    <select id="langSelect">
      <option value="en">English</option>
      <option value="hi">‡§π‡§ø‡§®‡•ç‡§¶‡•Ä (Hindi)</option>
      <option value="ta">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç (Tamil)</option>
      <option value="te">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å (Telugu)</option>
      <option value="or">‡¨ì‡¨°‡¨º‡¨ø‡¨Ü (Odia)</option>
    </select>

    <svg viewBox="0 0 900 200">
      <!-- Number Line -->
      <line x1="50" y1="100" x2="850" y2="100"/>
      <!-- Ticks -->
      <line x1="50" y1="95" x2="50" y2="105"/>
      <line x1="200" y1="95" x2="200" y2="105"/>
      <line x1="350" y1="95" x2="350" y2="105"/>
      <line x1="500" y1="95" x2="500" y2="105"/>
      <line x1="650" y1="95" x2="650" y2="105"/>
      <line x1="800" y1="95" x2="800" y2="105"/>
      <!-- Labels -->
      <text x="50" y="80" text-anchor="middle" class="numText">0</text>
      <text x="200" y="80" text-anchor="middle" class="numText">10</text>
      <text x="350" y="80" text-anchor="middle" class="numText">20</text>
      <text x="500" y="80" text-anchor="middle" class="numText">30</text>
      <text x="650" y="80" text-anchor="middle" class="numText">40</text>
      <text x="800" y="80" text-anchor="middle" class="numText">50</text>
      <!-- Highlighted points -->
      <circle id="p10" class="point" cx="200" cy="100" r="8"/>
      <circle id="p30" class="point" cx="500" cy="100" r="8"/>
      <circle id="p40" class="point" cx="650" cy="100" r="8"/>
    </svg>

    <div id="caption" class="caption">Let's place numbers on a number line!</div>
    <br>
    <button id="pauseBtn">‚è∏ Pause</button>
    <button id="replayBtn">üîÑ Replay</button>
    <button id="videoFinishBtn" class="nav-btn finish-btn">Finish</button>
  </div>

  <script>
    const caption = document.getElementById("caption");
    const replayBtn = document.getElementById("replayBtn");
    const pauseBtn = document.getElementById("pauseBtn");
    const langSelect = document.getElementById("langSelect");

    let paused = false;
    let currentStepIndex = 0;
    let currentLang = "en";

    const captions = {
      en:[
        "Let's place numbers on a number line!",
        "Here is a number line from 0 to 50.",
        "The number 10 is marked here.",
        "The number 30 is marked here.",
        "The number 40 is marked here.",
        "Now you can compare numbers easily on this line.",
        "Number lines help visualize relative positions of numbers."
      ],
      hi:[
        "‡§Ü‡§á‡§è ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∞‡•á‡§ñ‡§æ ‡§™‡§∞ ‡§∞‡§ñ‡•á‡§Ç!",
        "‡§Ø‡§π‡§æ‡§Å 0 ‡§∏‡•á 50 ‡§§‡§ï ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∞‡•á‡§ñ‡§æ ‡§π‡•à‡•§",
        "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ 10 ‡§ï‡•ã ‡§Ø‡§π‡§æ‡§Å ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
        "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ 30 ‡§ï‡•ã ‡§Ø‡§π‡§æ‡§Å ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
        "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ 40 ‡§ï‡•ã ‡§Ø‡§π‡§æ‡§Å ‡§ö‡§ø‡§π‡•ç‡§®‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
        "‡§Ö‡§¨ ‡§Ü‡§™ ‡§á‡§∏ ‡§∞‡•á‡§ñ‡§æ ‡§™‡§∞ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§§‡•Å‡§≤‡§®‡§æ ‡§Ü‡§∏‡§æ‡§®‡•Ä ‡§∏‡•á ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
        "‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§∞‡•á‡§ñ‡§æ‡§è‡§Å ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡•ã ‡§¶‡•á‡§ñ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡§Ç‡•§"
      ],
      ta:[
        "‡Æé‡Æ£‡Øç‡Æï‡Æ≥‡Øà ‡Æé‡Æ£‡Øç ‡Æµ‡Æ∞‡Æø‡ÆØ‡Æø‡Æ≤‡Øç ‡Æá‡Æü‡ØÅ‡Æµ‡Øã‡ÆÆ‡Øç!",
        "‡Æá‡Æ§‡ØÅ 0 ‡ÆÆ‡ØÅ‡Æ§‡Æ≤‡Øç 50 ‡Æµ‡Æ∞‡Øà ‡Æâ‡Æ≥‡Øç‡Æ≥ ‡Æé‡Æ£‡Øç ‡Æµ‡Æ∞‡Æø.",
        "‡Æé‡Æ£‡Øç 10 ‡Æá‡Æô‡Øç‡Æï‡ØÅ ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        "‡Æé‡Æ£‡Øç 30 ‡Æá‡Æô‡Øç‡Æï‡ØÅ ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        "‡Æé‡Æ£‡Øç 40 ‡Æá‡Æô‡Øç‡Æï‡ØÅ ‡Æï‡ØÅ‡Æ±‡Æø‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡ØÅ‡Æ≥‡Øç‡Æ≥‡Æ§‡ØÅ.",
        "‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æá‡Æ®‡Øç‡Æ§ ‡Æµ‡Æ∞‡Æø‡ÆØ‡Æø‡Æ≤‡Øç ‡Æé‡Æ£‡Øç‡Æï‡Æ≥‡Øà ‡Æí‡Æ™‡Øç‡Æ™‡Æø‡Æü‡Æ≤‡Ææ‡ÆÆ‡Øç.",
        "‡Æé‡Æ£‡Øç ‡Æµ‡Æ∞‡Æø‡Æï‡Æ≥‡Øç ‡Æé‡Æ£‡Øç‡Æï‡Æ≥‡Æø‡Æ©‡Øç ‡Æ§‡Øä‡Æü‡Æ∞‡Øç‡Æ™‡Øà ‡Æï‡Ææ‡Æ£ ‡Æâ‡Æ§‡Æµ‡ØÅ‡Æï‡Æø‡Æ©‡Øç‡Æ±‡Æ©."
      ],
      te:[
        "‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞≤‡∞®‡±Å ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø ‡∞∞‡±á‡∞ñ‡∞™‡±à ‡∞â‡∞Ç‡∞ö‡±Å‡∞¶‡∞æ‡∞Ç!",
        "‡∞á‡∞¶‡∞ø 0 ‡∞®‡±Å‡∞Ç‡∞°‡∞ø 50 ‡∞µ‡∞∞‡∞ï‡±Å ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø ‡∞∞‡±á‡∞ñ.",
        "‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø 10 ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø.",
        "‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø 30 ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø.",
        "‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø 40 ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞â‡∞Ç‡∞¶‡∞ø.",
        "‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞à ‡∞∞‡±á‡∞ñ‡∞™‡±à ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞≤‡∞®‡±Å ‡∞™‡±ã‡∞≤‡±ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡±Å.",
        "‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞æ ‡∞∞‡±á‡∞ñ‡∞≤‡±Å ‡∞∏‡∞Ç‡∞ñ‡±ç‡∞Ø‡∞≤ ‡∞∏‡±ç‡∞•‡∞æ‡∞®‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞ö‡±Ç‡∞™‡±Å‡∞§‡∞æ‡∞Ø‡∞ø."
      ],
      or:[
        "‡¨Ü‡¨∏‡¨®‡≠ç‡¨§‡≠Å ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨∞‡≠á‡¨ñ‡¨æ‡¨∞‡≠á ‡¨∞‡¨ñ‡¨ø‡¨¨‡¨æ!",
        "‡¨è‡¨π‡¨æ 0‡¨∞‡≠Å 50 ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨∞‡≠á‡¨ñ‡¨æ‡•§",
        "‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ 10 ‡¨è‡¨†‡¨æ‡¨∞‡≠á ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ø‡¨§‡•§",
        "‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ 30 ‡¨è‡¨†‡¨æ‡¨∞‡≠á ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ø‡¨§‡•§",
        "‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ 40 ‡¨è‡¨†‡¨æ‡¨∞‡≠á ‡¨ö‡¨ø‡¨π‡≠ç‡¨®‡¨ø‡¨§‡•§",
        "‡¨è‡¨¨‡≠á ‡¨Ü‡¨™‡¨£ ‡¨∏‡¨π‡¨ú‡¨∞‡≠á ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨§‡≠Å‡¨≥‡¨®‡¨æ ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§",
        "‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ ‡¨∞‡≠á‡¨ñ‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨∏‡¨Ç‡¨ñ‡≠ç‡≠ü‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡¨∞ ‡¨∏‡¨Æ‡≠ç‡¨™‡¨∞‡≠ç‡¨ï ‡¨¶‡≠á‡¨ñ‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨∏‡¨æ‡¨π‡¨æ‡¨Ø‡≠ç‡≠ü ‡¨ï‡¨∞‡≠á‡•§"
      ]
    };

    const voicesMap = { en:"en-IN", hi:"hi-IN", ta:"ta-IN", te:"te-IN", or:"or-IN" };

    function speak(text, lang, callback){
      if(paused) return;
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = voicesMap[lang] || "en-IN";
      utterance.rate = 0.95;
      utterance.onend = ()=>{if(!paused) callback();};
      window.speechSynthesis.cancel();
      window.speechSynthesis.speak(utterance);
    }

    function runStep(){
      if(currentStepIndex >= captions[currentLang].length){
        replayBtn.style.display="inline-block";
        return;
      }
      caption.textContent = captions[currentLang][currentStepIndex];

      // Animations
      if(currentStepIndex === 2) gsap.to("#p10",{opacity:1, scale:1.3, duration:0.8, yoyo:true, repeat:1});
      if(currentStepIndex === 3) gsap.to("#p30",{opacity:1, scale:1.3, duration:0.8, yoyo:true, repeat:1});
      if(currentStepIndex === 4) gsap.to("#p40",{opacity:1, scale:1.3, duration:0.8, yoyo:true, repeat:1});

      speak(captions[currentLang][currentStepIndex], currentLang, ()=>{
        currentStepIndex++;
        if(!paused) runStep();
      });
    }

    function playAnimation(){
      replayBtn.style.display="none";
      paused=false;
      currentStepIndex=0;
      currentLang = langSelect.value;

      // Reset points
      gsap.set(["#p10","#p30","#p40"], {opacity:0, scale:1});

      runStep();
    }

    pauseBtn.addEventListener("click", ()=>{
      if(!paused){
        paused=true;
        window.speechSynthesis.cancel();
        pauseBtn.textContent="‚ñ∂ Play";
      } else {
        paused=false;
        pauseBtn.textContent="‚è∏ Pause";
        runStep();
      }
    });

    replayBtn.addEventListener("click", playAnimation);
    langSelect.addEventListener("change", ()=>{
      currentLang = langSelect.value;
      if(!paused) playAnimation();
      else caption.textContent = captions[currentLang][currentStepIndex] || captions[currentLang][0];
    });

    playAnimation();
    const videoFinishBtn = document.getElementById('videoFinishBtn');
    videoFinishBtn?.addEventListener('click', ()=>{
      try {
        const key = 'aurraa:chapter1:progress';
        const data = JSON.parse(localStorage.getItem(key) || '{}');
        data['india-inter'] = true;
        localStorage.setItem(key, JSON.stringify(data));
      } catch(e) { /* ignore storage errors */ }

      // small confetti burst
      if (window.confetti) {
        confetti({ particleCount: 60, spread: 55, origin: { y: 0.6 } });
      }

      setTimeout(()=> window.location.href = 'ncret-math-g6-c2.html?open=india-inter', 700);
    });
  </script>
</body>
</html>